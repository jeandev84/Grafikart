CREATE DATABASE
===================================
$ php bin/console doctrine:database:create
Created database `agenceimmobiliere` for connection named default

===================================
CREATE ENTITY
===================================
$ bin/console make:entity
 Class name of the entity to create or update (e.g. GrumpyPuppy):
 > Property

 created: src/Entity/Property.php
 created: src/Repository/PropertyRepository.php

 Entity generated! Now let's add some fields!
 You can always add more fields later manually or by re-running this command.

 New property name (press <return> to stop adding fields):
 > title

 Field type (enter ? to see all types) [string]:
 > ?

Main types
  * string
  * text
  * boolean
  * integer (or smallint, bigint)
  * float

Relationships / Associations
  * relation (a wizard ðŸ§™ will help you build the relation)
  * ManyToOne
  * OneToMany
  * ManyToMany
  * OneToOne

Array/Object Types
  * array (or simple_array)
  * json
  * object
  * binary
  * blob

Date/Time Types
  * datetime (or datetime_immutable)
  * datetimetz (or datetimetz_immutable)
  * date (or date_immutable)
  * time (or time_immutable)
  * dateinterval

Other Types
  * decimal
  * guid
  * json_array


 Field type (enter ? to see all types) [string]:
 >

 Field length [255]:
 >

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 > description

 Field type (enter ? to see all types) [string]:
 > text

 Can this field be null in the database (nullable) (yes/no) [no]:
 > yes

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
  >



   Success!


  Next: When you're ready, create a migration with make:migration

==============================================
MAKE MIGRATION
=============================================
$ bin/console make:migration


Success!


Next: Review the new migration "src/Migrations/Version20200221121808.php"
Then: Run the migration with php bin/console doctrine:migrations:migrate
See https://symfony.com/doc/current/bundles/DoctrineMigrationsBundle/index.html

=================================================
MIGRATE
=================================================
$ bin/console doctrine:migrations:migrate

                    Application Migrations


WARNING! You are about to execute a database migration that could result in schema changes and data loss. Are you sure you wish to continue? (y/n)y
Migrating up to 20200221121808 from 0

  ++ migrating 20200221121808

     -> CREATE TABLE property (id INT AUTO_INCREMENT NOT NULL, title VARCHAR(255) NOT NULL, description LONGTEXT DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB

  ++ migrated (took 94.1ms, used 14M memory)

  ------------------------

  ++ finished in 109.3ms
  ++ used 14M memory
  ++ 1 migrations executed
  ++ 1 sql queries

===============================================================
AJOUTER DES PROPRIETES A L'ENTITE Property :
===============================================================
$ bin/console make:entity Property

 Your entity already exists! So let's add some new fields!

 New property name (press <return> to stop adding fields):
 > surface

 Field type (enter ? to see all types) [string]:
 > integer

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 > rooms

 Field type (enter ? to see all types) [string]:
 > integer

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 > bedrooms

 Field type (enter ? to see all types) [string]:
 > integer

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 > floor

 Field type (enter ? to see all types) [string]:
 > integer

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 > price

 Field type (enter ? to see all types) [string]:
 > integer

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 > heat

 Field type (enter ? to see all types) [string]:
 > integer

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 > city

 Field type (enter ? to see all types) [string]:
 >

 Field length [255]:
 >

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 > address

 Field type (enter ? to see all types) [string]:
 >

 Field length [255]:
 >

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 > postal_code

 Field type (enter ? to see all types) [string]:
 >

 Field length [255]:
 >

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 > sold

 Field type (enter ? to see all types) [string]:
 > boolean

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 > created_at

 Field type (enter ? to see all types) [datetime]:
 >

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 >



  Success!


 Next: When you're ready, create a migration with make:migration

==========================================================================
MAKE MIGRATION:
$ bin/console make:migration

Success!


Next: Review the new migration "src/Migrations/Version20200221123811.php"
Then: Run the migration with php bin/console doctrine:migrations:migrate
See https://symfony.com/doc/current/bundles/DoctrineMigrationsBundle/index.html

==========================================================================
MIGRATE :
$ bin/console doctrine:migrations:migrate
==========================================================================

                    Application Migrations


WARNING! You are about to execute a database migration that could result in schema changes and data loss. Are you sure you wish to continue? (y/n)
Migrating up to 20200221124314 from 20200221121808

  ++ migrating 20200221124314

     -> ALTER TABLE property ADD surface INT NOT NULL, ADD rooms INT NOT NULL, ADD bedrooms INT NOT NULL, ADD floor INT NOT NULL, ADD price INT NOT NULL, ADD heat INT NOT NULL, ADD city VARCHAR(255) NOT NULL, ADD address VARCHAR(255) NOT NULL, ADD postal_code VARCHAR(255) NOT NULL, ADD sold TINYINT(1) DEFAULT '0' NOT NULL, ADD created_at DATETIME NOT NULL

  ++ migrated (took 150ms, used 32.25M memory)

  ------------------------

  ++ finished in 158.9ms
  ++ used 32.25M memory
  ++ 1 migrations executed
  ++ 1 sql queries

=============================================================================


