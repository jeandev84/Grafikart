config/packages/security.yaml

======================================================

security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    (providers: Permet de dire comment on va recuperer les utilisateurs soit depuis une memoire ou base de donnee..)
    providers:
        users_in_memory: { memory: null }
    (firewalls : definit les composants qui vont etre utiliser pour authentifier un utilisateur)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: users_in_memory

            http_basic: true ( pour le cas d'authentification ou il s'affiche un popup )
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    (Access Control qui definit les niveau d'acces a notre application)
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

=================================================================================
CONNECT VIA HTTP_BASIC:
security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory:
            memory:
                users:
                    demo:
                        password: demo
                        roles: ROLE_ADMIN
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: users_in_memory

            http_basic: true
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # Il faut le ROLE ADMINISTRATEUR pour aller a /admin
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

=====
Pour se deconnecter en http_basic lancer dans le browser :
 log:out@http://localhost:8000/admin

========================================================================
USE COMPOSANT FORM_LOGIN
======================================================
$ bin/console make:entity User

========================================================================
security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
#        users_in_memory:
#            memory:
#                users:
#                    demo:
#                        password: demo
#                        roles: ROLE_ADMIN
        # on indique qu'on provient d'une  base de donnees
        from_database:
            entity:
                class: App\Entity\User # entity
                property: username # ici on indique la propriete a utiliser dans cette entity [soit username, email]

        firewalls:
            dev:
                pattern: ^/(_(profiler|wdt)|css|images|js)/
                security: false
            main:
                anonymous: true
                logout:
                    path: /logout
                    target: /

                # activate different ways to authenticate
                # http_basic: true

                # form_login: true
                form_login:
                    check_path: login

                # https://symfony.com/doc/current/security.html#firewalls-authentication

                # https://symfony.com/doc/current/security/impersonating_user.html
                # switch_user: true

        # Easy way to control access for large sections of your site
        # Note: Only the *first* access control that matches will be used
        access_control:
            - { path: ^/admin, roles: ROLE_ADMIN }
            # - { path: ^/profile, roles: ROLE_USER }

        encoders:
            # Symfony\Component\Security\Core\User\User: plaintext
            # App\Entity\User: plaintext
            # cost: 12 # cost > ou <
            App\Entity\User:
                # algorithm: bcrypt
                algorithm: auto
                cost: 12





